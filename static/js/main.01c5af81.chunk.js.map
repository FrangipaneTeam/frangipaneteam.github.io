{"version":3,"sources":["contexts/theme.js","portfolio.js","components/Navbar/Navbar.js","components/Header/Header.js","components/About/About.js","components/ProjectContainer/ProjectContainer.js","components/Projects/Projects.js","components/ScrollToTop/ScrollToTop.js","components/Footer/Footer.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","themeName","setThemeName","useEffect","darkMediaQuery","window","matchMedia","matches","addEventListener","e","_jsx","Provider","value","toggleTheme","name","localStorage","setItem","header","about","role","description","social","github","projects","stack","sourceCode","livePreview","Navbar","_useContext","useContext","_useContext2$","showNavList","setShowNavList","_jsxs","className","type","onClick","WbSunnyRoundedIcon","Brightness2Icon","CloseIcon","MenuIcon","Header","homepage","title","href","About","resume","_Fragment","GitHubIcon","ProjectContainer","project","map","item","uniqid","LaunchIcon","Projects","length","id","ScrollToTop","isVisible","setIsVisible","toggleVisibility","pageYOffset","removeEventListener","ArrowUpwardIcon","fontSize","Footer","App","concat","render","document","getElementById"],"mappings":"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","file":"static/js/main.01c5af81.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst ThemeContext = createContext()\n\nconst ThemeProvider = ({ children }) => {\n  const [themeName, setThemeName] = useState('light')\n\n  useEffect(() => {\n    const darkMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    setThemeName(darkMediaQuery.matches ? 'dark' : 'light')\n    darkMediaQuery.addEventListener('change', (e) => {\n      setThemeName(e.matches ? 'dark' : 'light')\n    });\n  }, [])\n\n  const toggleTheme = () => {\n    const name = themeName === 'dark' ? 'light' : 'dark'\n    localStorage.setItem('themeName', name)\n    setThemeName(name)\n  }\n\n  return (\n    <ThemeContext.Provider value={[{ themeName, toggleTheme }]}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport { ThemeProvider, ThemeContext }\n","const header = {\n  homepage: 'https://frangipaneteam.github.io/',\n  title: 'Frangipane Team.',\n}\n\nconst about = {\n  name: 'FrangipaneTeam',\n  role: 'Orange Business team',\n  description:\n    'Frangipane Team is a french team of Orange Business. We are working on lots of projects based on Golang language.',\n  social: {\n    github: 'https://github.com/FrangipaneTeam',\n  },\n}\n\nconst projects = [\n  {\n    name: 'terraform-provider-cloudavenue',\n    description:\n      'A Terraform provider for Cloud Avenue. Cloud Avenue is a IaaS cloud provider based on Vmware technology.',\n    stack: ['Golang', 'Terraform'],\n    sourceCode: 'https://github.com/orange-cloudavenue/terraform-provider-cloudavenue',\n    livePreview: 'https://cloud.orange-business.com/offres/infrastructure-iaas/cloud-avenue/',\n  },\n  {\n    name: 'provider-flexibleengine',\n    description:\n      'Crossplane provider that exposes XRM-conformant managed resources for the FlexibleEngine API. FlexibleEngine is a IaaS cloud provider based on OpenStack technology.',\n    stack: ['Golang', 'CrossPlane'],\n    sourceCode: 'https://github.com/FrangipaneTeam/provider-flexibleengine',\n    livePreview: 'https://marketplace.upbound.io/providers/frangipaneteam/provider-flexibleengine',\n  },\n  {\n    name: 'bean',\n    description:\n      'bean is a terminal app built to help to test Crossplane providers.',\n    stack: ['Golang', 'Crossplane', 'CLI'],\n    sourceCode: 'https://github.com/FrangipaneTeam/bean',\n  },\n  {\n    name: 'terraform-provider-framework-planmodifiers',\n    description:\n      'Collections of plan modifiers for the Terraform Plugin Framework',\n    stack: ['Golang', 'Terraform'],\n    sourceCode: 'https://github.com/FrangipaneTeam/terraform-plugin-framework-planmodifiers',\n    livePreview: 'https://frangipaneteam.github.io/terraform-plugin-framework-planmodifiers/',\n  },\n  {\n    name: 'terraform-provider-framework-validators',\n    description:\n      'Collections of validators for the Terraform Plugin Framework',\n    stack: ['Golang', 'Terraform'],\n    sourceCode: 'https://github.com/FrangipaneTeam/terraform-plugin-framework-planmodifiers',\n    livePreview: 'https://frangipaneteam.github.io/terraform-plugin-framework-planmodifiers/',\n  },\n\n]\n\nexport { header, about, projects }\n","import { useContext, useState } from 'react'\nimport Brightness2Icon from '@material-ui/icons/Brightness2'\nimport WbSunnyRoundedIcon from '@material-ui/icons/WbSunnyRounded'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { ThemeContext } from '../../contexts/theme'\nimport './Navbar.css'\n\nconst Navbar = () => {\n  const [{ themeName, toggleTheme }] = useContext(ThemeContext)\n  const [showNavList, setShowNavList] = useState(false)\n\n  const toggleNavList = () => setShowNavList(!showNavList)\n\n  return (\n    <nav className='center nav'>\n      <button\n        type='button'\n        onClick={toggleTheme}\n        className='btn btn--icon nav__theme'\n        aria-label='toggle theme'\n      >\n        {themeName === 'dark' ? <WbSunnyRoundedIcon /> : <Brightness2Icon />}\n      </button>\n\n      <button\n        type='button'\n        onClick={toggleNavList}\n        className='btn btn--icon nav__hamburger'\n        aria-label='toggle navigation'\n      >\n        {showNavList ? <CloseIcon /> : <MenuIcon />}\n      </button>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import { header } from '../../portfolio'\nimport Navbar from '../Navbar/Navbar'\nimport './Header.css'\n\nconst Header = () => {\n  const { homepage, title } = header\n\n  return (\n    <header className='header center'>\n      <h3>\n        {homepage ? (\n          <a href={homepage} className='link'>\n            {title}\n          </a>\n        ) : (\n          title\n        )}\n      </h3>\n      <Navbar />\n    </header>\n  )\n}\n\nexport default Header\n","import GitHubIcon from '@material-ui/icons/GitHub'\nimport { about } from '../../portfolio'\nimport './About.css'\n\nconst About = () => {\n  const { name, role, description, resume, social } = about\n\n  return (\n    <div className='about center'>\n      {name && (\n        <h1>\n          <span className='about__name'>{name}.</span>\n        </h1>\n      )}\n\n      {role && <h2 className='about__role'>An {role}.</h2>}\n      <p className='about__desc'>{description && description}</p>\n\n      <div className='about__contact center'>\n        {resume && (\n          <a href={resume}>\n            <span type='button' className='btn btn--outline'>\n              Resume\n            </span>\n          </a>\n        )}\n\n        {social && (\n          <>\n            {social.github && (\n              <a\n                href={social.github}\n                aria-label='github'\n                className='link link--icon'\n              >\n                <GitHubIcon />\n              </a>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default About\n","import uniqid from 'uniqid'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport LaunchIcon from '@material-ui/icons/Launch'\nimport './ProjectContainer.css'\n\nconst ProjectContainer = ({ project }) => (\n  <div className='project'>\n    <h3>{project.name}</h3>\n\n    <p className='project__description'>{project.description}</p>\n    {project.stack && (\n      <ul className='project__stack'>\n        {project.stack.map((item) => (\n          <li key={uniqid()} className='project__stack-item'>\n            {item}\n          </li>\n        ))}\n      </ul>\n    )}\n\n    {project.sourceCode && (\n      <a\n        href={project.sourceCode}\n        aria-label='source code'\n        className='link link--icon'\n      >\n        <GitHubIcon />\n      </a>\n    )}\n\n    {project.livePreview && (\n      <a\n        href={project.livePreview}\n        aria-label='live preview'\n        className='link link--icon'\n      >\n        <LaunchIcon />\n      </a>\n    )}\n  </div>\n)\n\nexport default ProjectContainer\n","import uniqid from 'uniqid'\nimport { projects } from '../../portfolio'\nimport ProjectContainer from '../ProjectContainer/ProjectContainer'\nimport './Projects.css'\n\nconst Projects = () => {\n  if (!projects.length) return null\n\n  return (\n    <section id='projects' className='section projects'>\n      <h2 className='section__title'>Projects</h2>\n\n      <div className='projects__grid'>\n        {projects.map((project) => (\n          <ProjectContainer key={uniqid()} project={project} />\n        ))}\n      </div>\n    </section>\n  )\n}\n\nexport default Projects\n","import React, { useEffect, useState } from 'react'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport './ScrollToTop.css'\n\nconst ScrollToTop = () => {\n  const [isVisible, setIsVisible] = useState(false)\n\n  useEffect(() => {\n    const toggleVisibility = () =>\n      window.pageYOffset > 500 ? setIsVisible(true) : setIsVisible(false)\n\n    window.addEventListener('scroll', toggleVisibility)\n    return () => window.removeEventListener('scroll', toggleVisibility)\n  }, [])\n\n  return isVisible ? (\n    <div className='scroll-top'>\n      <a href='#top'>\n        <ArrowUpwardIcon fontSize='large' />\n      </a>\n    </div>\n  ) : null\n}\n\nexport default ScrollToTop\n","import './Footer.css'\n\nconst Footer = () => (\n  <footer className='footer'>\n    Created with ♥ and a lot of frangipane\n  </footer>\n)\n\nexport default Footer\n","import { useContext } from 'react'\nimport { ThemeContext } from './contexts/theme'\nimport Header from './components/Header/Header'\nimport About from './components/About/About'\nimport Projects from './components/Projects/Projects'\nimport ScrollToTop from './components/ScrollToTop/ScrollToTop'\nimport Footer from './components/Footer/Footer'\nimport './App.css'\n\nconst App = () => {\n  const [{ themeName }] = useContext(ThemeContext)\n\n  return (\n    <div id='top' className={`${themeName} app`}>\n      <Header />\n\n      <main>\n        <About />\n        <Projects />\n      </main>\n\n      <ScrollToTop />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import { render } from 'react-dom'\nimport App from './App'\nimport { ThemeProvider } from './contexts/theme'\nimport './index.css'\n\nrender(\n  <ThemeProvider>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}